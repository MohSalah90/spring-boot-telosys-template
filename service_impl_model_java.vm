/*
*  Copyright (c) 2019. All right reserved
* Created on $today.date ( Date ISO $today.date("yyyy-MM-dd") - Time $today.time )
* Generated by $generator.name ( version $generator.version )
*/
package ${target.javaPackageFromFolder(${SRC})};


import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.UUID;
import java.util.List;

/**
* <h2>${entity.name}Serviceimpl</h2>
* @author ${AUTHOR_NAME}
*/
@Service
@Transactional
public class ${entity.name}ServiceImpl implements ${entity.name}Service {


private final ${entity.name}Repository repository;

public ${entity.name}ServiceImpl(${entity.name}Repository repo) {
this.repository = repo;
}


 @Override
    public ${entity.name} create(${entity.name} d) {

       ${entity.name} entity;

        try {
            entity = repository.save(d);

        } catch (Exception ex) {
            return null;
        }
        return entity;
    }

    
    @Override
    public ${entity.name} update(${entity.name} d) {
        ${entity.name} c;

        try {
            c = repository.saveAndFlush(d);

        } catch (Exception ex) {
            return null;
        }
        return c;
    }


    @Override
    public ${entity.name} getOne(long id) {
        ${entity.name} t;

        try {
            t = repository.findById(id).orElse(null);

        } catch (Exception ex) {
            return null;
        }
        return t;
    }


    @Override
    public List<${entity.name}> getAll() {
        List<${entity.name}> lst;

        try {
            lst = repository.findAll();

        } catch (Exception ex) {
            return Collections.emptyList();
        }
        return lst;
    }


    @Override
    public long getTotal() {
        long total;

        try {
            total = repository.count();
        } catch (Exception ex) {
            return 0;
        }
        return total;
    }

    @Override
    public boolean delete(long id) {
        try {
            repository.deleteById(id);
            return true;

        } catch (Exception ex) {
            return false;
        }
    }

   

}
